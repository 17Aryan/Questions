Q1. An automoile company manufactures both a two wheeler and a four wheeler . A company manager wants to make the production of both types   of vehicle according to the given data below.
1st data , TOTAL NUMBER of vehicle = v
2nd data, Total number of wheels = w
The task is to find how many two wheelers and four wheelers need to manufacture after given data.

Example 
200 -> value of v
540 -> value of w

Output :
TW = 130
FW = 70


Q2. Given a string S(input consisting) of '*' and '#' . The length of the string is variable . The task is to find the minimum number of '*' and '#' to make it a valid string . The string is considered valid if the number of '*' and '#' are equal . The '*' and '#' can be at any position in string.

Note - The output will be in positive or negative integer based on number of '*' and '#' in the input string.

(*>#): positive integer
(#>*): negative integer
(#=*): 0

Example 1:

Input 1:
###***   -> Value of S

Output :
0 → number of * and # are equal


Q3. Given an integer array Arr of size N . The task is to find the count of elements whose value is greater that all of its prior elements.

Note : 1st element of the array should be considered in the count of the result.

For example,

Arr[]={7,4,8,2,9}
As 7 is the first element, it will consider in the result. 
8 and 9 are also the elements that are greater than all of its previous elements. 
Since total of  3 elements is present in the array that meets the condition.
Hence the output = 3.

Example 1:

Input 
5 -> Value of N, represents size of Arr
7-> Value of Arr[0]
4 -> Value of Arr[1]
8-> Value of Arr[2]
2-> Value of Arr[3]
9-> Value of Arr[4]

Output :
3

Q4. A parking lot in a mall has RxC number of parking spaces. Each parking space will either be empty(0) or full(1).The status (0/1) of a parking space is represented as the element of the matrix. The task is to find index of the prpeinzta row(R) in the parking lot that has the most of the parking spaces full(1).

Note :
RxC- Size of the matrix
Elements of the matrix M should be only 0 or 1.

Example 1:

Input :
3   -> Value of R(row)
3    -> value of C(column)
[0 1 0 1 1 0 1 1 1] -> Elements of the array M[R][C] where each element is separated by new line.

Output :
3  -> Row 3 has maximum number of 1’s

Q5. A party has been organised on cruise . The party is organised for a limited time(T). The number of guests entering (E[i]) and leaving (L[i]) the party at every hour is represented as elements of the array. The task is to find the maximum number of guests present on the cruise at any given instance within T hours.

Example 1:

Input :
5    -> Value of T
[7,0,5,1,3]  -> E[], Element of E[0] to E[N-1], where input each element is separated by new line 
[1,2,1,3,4]   -> L[], Element of L[0] to L[N-1], while input each element is separate by new line

Output :
8     -> Maximum number of guests on cruise at an instance.


Q6. There is a JAR full of candies for sale at a mall counter. JAR has the capacity N, that is JAR can contain maximum N candies when JAR is full. At any point of time. JAR can have M number of Candies where M<=N. Candies are served to the customers. JAR is never remain empty as when last k candies are left. JAR if refilled with new candies in such a way that JAR get full.
Write a code to implement above scenario. Display JAR at counter with available number of candies. Input should be the number of candies one customer can order at point of time. Update the JAR after each purchase and display JAR at Counter.

Output should give number of Candies sold and updated number of Candies in JAR. If input is more than candles in JAR, return: " INVALID INPUT"

Given, 

N=10, where N is NUMBER OF CANDIES AVAILABLE
K =< 5, where k is number of minimum candies that must be inside JAR ever.

Example 1:(N = 10, k =< 5)

Input Value
3

Output Value
NUMBER OF CANDIES SOLD : 3
NUMBER OF CANDIES AVAILABLE : 7


